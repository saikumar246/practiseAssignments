SONARQUBE:-
SonarQube is an open-source platform developed by SonarSource for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs, 
code smells, and security vulnerabilities on 20+ programming languages. SonarQube offers reports on duplicated code, coding standards, unit tests, code coverage, code complexity, 
comments, bugs, and security vulnerabilities.

SonarQube can record metrics history and provides evolution graphs. SonarQube provides 
fully automated analysis and integration with Maven, Ant, Gradle, MSBuild and continuous integration tools.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SONARLINT:-
SonarLint is a free IDE extension that lets you fix coding issues before they exist!

Like a spell checker, SonarLint highlights Bugs and Security Vulnerabilities as you write code, with clear remediation guidance 
so you can fix them before the code is even committed. Across popular IDEs (Eclipse, IntelliJ, Visual Studio, VS Code) and 
popular programming languages, SonarLint helps all developers write better and safer code.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ARRAYS IN JAVA:--

Normally, an array is a collection of similar type of elements which has contiguous memory location.

 Java array is an object which contains elements of a similar data type. Additionally, The elements of an array are stored in a contiguous memory location. 
It is a data structure where we store similar elements.
We can store only a fixed set of elements in a Java array.

Array in Java is index-based, the first element of the array is stored at the 0th index, 2nd element is stored on 1st index and so on.

Advantages:-
Code Optimization: It makes the code optimized, we can retrieve or sort the data efficiently.
Random access: We can get any data located at an index position.

Disadvantages:--
Size Limit: We can store only the fixed size of elements in the array. It doesn't grow its size at runtime. To solve this problem, collection framework is 
used in Java which grows automatically.

//Java Program to illustrate how to declare, instantiate, initialize  
//and traverse the Java array.  
class Testarray{  
public static void main(String args[]){  
int a[]=new int[5];//declaration and instantiation  
a[0]=10;//initialization  
a[1]=20;  
a[2]=70;  
a[3]=40;  
a[4]=50;  
//traversing array  
for(int i=0;i<a.length;i++)//length is the property of array  
System.out.println(a[i]);  
}}